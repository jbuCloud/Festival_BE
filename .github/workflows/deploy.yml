name: CI/CD to EC2

on:
  workflow_dispatch:
  push:
    branches: [dev2]
    paths-ignore:
      - '.github/workflows/**'
      - 'README.md'
  pull_request:
    branches: [dev2]
    paths-ignore:
      - '.github/workflows/**'
      - 'README.md'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # ---- Gradle 빌드 (원래 로직 유지) ----
      - name: Build with Gradle
        run: |
          chmod +x gradlew
          ./gradlew clean bootJar -x test

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: build/libs/*.jar
          if-no-files-found: error

  deploy:
    needs: build
    runs-on: ubuntu-latest

    if: github.event_name == 'push' && github.ref == 'refs/heads/dev'
    steps:
      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: app-jar
          path: dist

      - name: Show downloaded files (optional)
        run: ls -al dist

      # JAR 파일을 EC2로 복사 (releases 폴더에 쌓고 최신 심볼릭 링크 갱신)
      - name: Upload JAR to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "dist/*.jar"
          target: "/home/ubuntu/app/releases/"
          strip_components: 1
          overwrite: true

      - name: Restart service on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e
            LATEST_JAR=$(ls -t /home/ubuntu/app/releases/*.jar | head -n 1)
            ln -sfn "$LATEST_JAR" /home/ubuntu/app/app.jar
            sudo systemctl daemon-reload
            sudo systemctl restart onda
            sleep 2
            systemctl --no-pager -l status onda || true
